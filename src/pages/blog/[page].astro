---
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

import Layout from "@layouts/Layout.astro";
import Passages from "@components/blog/Passages.astro";
import Subscribe from "@components/blog/Subscribe.astro";
import { api } from "@scripts/functions";

export const getStaticPaths = (async ({ paginate }) => {
  const posts: ArticleInTimeline[] = await api.getTimeline(1, 10000);
  return paginate(posts, { pageSize: 10 });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props;
---

<Layout
  title={"博客第 " + page.currentPage + " 页"}
  path={[
    { title: "博客", url: "/blog" },
    { title: "第 " + page.currentPage + " 页", url: "" },
  ]}
>
  <main>
    <section class="container mt-8 sm:mt-32">
      <Passages posts={page.data} />
      <div class="primary-color flex">
        <div class="basis-1/3">
          {
            page.url.prev && (
              <a
                href={page.currentPage === 2 ? "/blog" : page.url.prev}
                class="link"
              >
                上一页
              </a>
            )
          }
        </div>
        <div class="basis-1/3 text-center">
          <span>第 {page.currentPage} 页</span>
        </div>
        <div class="basis-1/3 text-right">
          {
            page.url.next && (
              <a href={page.url.next} class="link">
                下一页
              </a>
            )
          }
        </div>
      </div>
    </section>

    <Subscribe />
  </main>
</Layout>

<style lang="scss">
  .link {
    @apply transition-all;
    &:hover {
      @apply underline;
    }
  }

  img {
    @apply shadow-lg rounded;
  }

  h1 {
    @apply leading-normal;
  }
</style>
