---
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const url = new URL("https://blog.skywt.cn/api/posts");
  url.search = new URLSearchParams({
    page: "1",
    pageSize: "10000",
    showDigest: "more",
    showContent: "false",
  }).toString();
  const response = await fetch(url);
  const data = await response.json();
  const posts = data.data.dataSet;

  return paginate(posts, { pageSize: 10 });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props;

import Layout from "../../layouts/Layout.astro";
import Passages from "../../components/blog/Passages.astro";
import Subscribe from "../../components/blog/Subscribe.astro";
---

<Layout
  title={"博客第 " + page.currentPage + " 页"}
  path={["博客", "第 " + page.currentPage + " 页"]}
>
  <main>
    <section class="container mt-32">
      <Passages posts={page.data} />
      <div class="primary-color flex">
        <div class="basis-1/3">
          {
            page.url.prev && (
              <a href={page.url.prev} class="link">
                上一页
              </a>
            )
          }
        </div>
        <div class="basis-1/3 text-center">
          <span>第 {page.currentPage} 页</span>
        </div>
        <div class="basis-1/3 text-right">
          {
            page.url.next && (
              <a href={page.url.next} class="link">
                下一页
              </a>
            )
          }
        </div>
      </div>
    </section>

    <Subscribe />
  </main>
</Layout>

<style lang="scss">
  .link {
    @apply transition-all;
    &:hover {
      @apply underline;
    }
  }

  img {
    @apply shadow-lg rounded;
  }

  h1 {
    @apply leading-normal;
  }
</style>
