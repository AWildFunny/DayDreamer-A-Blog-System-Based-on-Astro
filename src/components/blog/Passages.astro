---
import markdown from "@scripts/markdown";
interface Props {
  articles: GotArticle[];
}

const { articles } = Astro.props;
---

{
  articles.map((article) => (
    <>
      <article class="content">
        {article.headPic && (
          <a href={article.headPic} data-fancybox data-caption={article.title}>
            <img
              src={article.headPic}
              alt={article.title}
              title={article.title}
            />
          </a>
        )}
        <a href={"/blog/" + article.slug} class="no-underline-by-default">
          <h1>{article.title}</h1>
        </a>
        <div class="summary">
          <Fragment set:html={markdown.parseContentSimple(article.digest)} />
        </div>
        <a href={"/blog/" + article.slug}>阅读更多</a>
      </article>
      <hr class="my-8" />
    </>
  ))
}

<style lang="scss">
  // typography 有一点不好：样式不能直接覆盖
  // 因为其默认设置的样式优先级比传入 tailwind 样式优先级高
  // 只能以这种丑陋的方式应用样式
  h1 {
    @apply leading-relaxed;
  }
</style>

<script>
  import { Fancybox } from "@fancyapps/ui";
  document.addEventListener(
    "astro:page-load",
    () => {
      Fancybox.bind("[data-fancybox]", {});
    },
    { once: false },
  );
</script>
